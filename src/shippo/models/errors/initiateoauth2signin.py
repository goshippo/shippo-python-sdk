"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from shippo import utils
from shippo.types import BaseModel
from typing import Optional


class NotFoundErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class NotFoundError(Exception):
    r"""Invalid carrier account provided by the user"""

    data: NotFoundErrorData

    def __init__(self, data: NotFoundErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, NotFoundErrorData)


class UnauthorizedErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class UnauthorizedError(Exception):
    r"""Invalid ShippoToken or unsupported carrier account provided by the user"""

    data: UnauthorizedErrorData

    def __init__(self, data: UnauthorizedErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, UnauthorizedErrorData)


class BadRequestErrorData(BaseModel):
    title: Optional[str] = None

    detail: Optional[str] = None


class BadRequestError(Exception):
    r"""Invalid parameters provided by the user"""

    data: BadRequestErrorData

    def __init__(self, data: BadRequestErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, BadRequestErrorData)
