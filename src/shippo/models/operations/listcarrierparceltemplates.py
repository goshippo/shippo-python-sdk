"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from shippo.types import BaseModel
from shippo.utils import FieldMetadata, HeaderMetadata, QueryParamMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ListCarrierParcelTemplatesGlobalsTypedDict(TypedDict):
    shippo_api_version: NotRequired[str]
    r"""String used to pick a non-default API version to use"""
    

class ListCarrierParcelTemplatesGlobals(BaseModel):
    shippo_api_version: Annotated[Optional[str], pydantic.Field(alias="SHIPPO-API-VERSION"), FieldMetadata(header=HeaderMetadata(style="simple", explode=False))] = None
    r"""String used to pick a non-default API version to use"""
    

class Include(str, Enum):
    r"""filter by user or enabled"""
    ALL = "all"
    USER = "user"
    ENABLED = "enabled"


class ListCarrierParcelTemplatesRequestTypedDict(TypedDict):
    include: NotRequired[Include]
    r"""filter by user or enabled"""
    carrier: NotRequired[str]
    r"""filter by specific carrier"""
    

class ListCarrierParcelTemplatesRequest(BaseModel):
    include: Annotated[Optional[Include], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""filter by user or enabled"""
    carrier: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""filter by specific carrier"""
    
