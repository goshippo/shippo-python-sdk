"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from shippo import utils
from typing import Optional

class Code(str, Enum):
    VERIFICATION_ERROR = 'verification_error'
    UNKNOWN_STREET_LOWER = 'unknown_street'
    COMPONENT_MISMATCH_ERROR = 'component_mismatch_error'
    MULTIPLE_MATCH = 'multiple_match'
    SUB_PREMISE_NUMBER_INVALID = 'sub_premise_number_invalid'
    SUB_PREMISE_NUMBER_MISSING = 'sub_premise_number_missing'
    PREMISE_NUMBER_INVALID = 'premise_number_invalid'
    PREMISE_NUMBER_MISSING = 'premise_number_missing'
    BOX_NUMBER_INVALID = 'box_number_invalid'
    BOX_NUMBER_MISSING = 'box_number_missing'
    PMB_NUMBER_MISSING = 'pmb_number_missing'
    POSTAL_CODE_CHANGE = 'postal_code_change'
    ADMINISTRATIVE_AREA_CHANGE = 'administrative_area_change'
    LOCALITY_CHANGE = 'locality_change'
    DEPENDENT_LOCALITY_CHANGE = 'dependent_locality_change'
    STREET_NAME_CHANGE = 'street_name_change'
    STREET_TYPE_CHANGE = 'street_type_change'
    STREET_DIRECTIONAL_CHANGE = 'street_directional_change'
    SUB_PREMISE_TYPE_CHANGE = 'sub_premise_type_change'
    SUB_PREMISE_NUMBER_CHANGE = 'sub_premise_number_change'
    DOUBLE_DEPENDENT_LOCALITY_CHANGE = 'double_dependent_locality_change'
    SUBADMINISTRATIVE_AREA_CHANGE = 'subadministrative_area_change'
    SUBNATIONAL_AREA_CHANGE = 'subnational_area_change'
    PO_BOX_CHANGE = 'po_box_change'
    PREMISE_TYPE_CHANGE = 'premise_type_change'
    HOUSE_NUMBER_CHANGE = 'house_number_change'
    ORGANIZATION_CHANGE = 'organization_change'
    EXTRANEOUS_INFORMATION = 'extraneous_information'
    USPS_DOOR_INACCESSIBLE = 'usps_door_inaccessible'
    ADMINISTRATIVE_AREA_PARTIAL = 'administrative_area_partial'
    CITY_PARTIAL = 'city_partial'
    STREET_PARTIAL = 'street_partial'
    BUILDING_PARTIAL = 'building_partial'
    SUBPREMISE_PARTIAL = 'subpremise_partial'
    ADMINISTRATIVE_AREA_FULL = 'administrative_area_full'
    CITY_FULL = 'city_full'
    THOROUGHFARE_FULL = 'thoroughfare_full'
    PREMISES_FULL = 'premises_full'
    SUBPREMISE_FULL = 'subpremise_full'
    GEOCODED_STREET = 'geocoded_street'
    GEOCODED_NEIGHBORHOOD = 'geocoded_neighborhood'
    GEOCODED_COMMUNITY = 'geocoded_community'
    GEOCODED_STATE = 'geocoded_state'
    GEOCODED_ROOFTOP = 'geocoded_rooftop'
    GEOCODED_INTERPOLATED_ROOFTOP = 'geocoded_interpolated_rooftop'
    INVALID_POSTAL_CODE = 'invalid_postal_code'
    POSTAL_CODE_NOT_FOUND = 'postal_code_not_found'
    EMPTY_REQUEST = 'empty_request'
    SERVICE_ERROR = 'service_error'
    STREET_DETAIL_MISSING = 'street_detail_missing'
    INVALID_CITY_STATE_ZIP = 'Invalid City/State/Zip'
    DEFAULT_MATCH = 'Default Match'
    UNKNOWN_STREET_MIXED = 'Unknown Street'
    ADDRESS_NOT_FOUND = 'Address Not Found'
    NON_DELIVERABLE_ZIP4 = 'Non-Deliverable ZIP4'
    MULTIPLE_RESPONSES = 'Multiple Responses'
    INVALID_DUAL_ADDRESS = 'Invalid Dual Address'
    INVALID_STATE = 'Invalid State'
    INVALID_CITY = 'Invalid City'
    AMBIGUOUS_ADDRESS = 'Ambiguous Address'

class Source(str, Enum):
    SHIPPO_ADDRESS_VALIDATOR = 'Shippo Address Validator'
    UPS = 'UPS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddressValidationResultsMessage:
    code: Optional[Code] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    source: Optional[Source] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    

