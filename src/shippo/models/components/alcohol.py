"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from shippo.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class RecipientType(str, Enum):
    r"""Mandatory for Fedex only. License type of the recipient of the Alcohol Package."""
    LICENSEE = "licensee"
    CONSUMER = "consumer"


class AlcoholTypedDict(TypedDict):
    r"""Indicates that a shipment contains Alcohol (Fedex and UPS only)."""
    
    contains_alcohol: NotRequired[bool]
    r"""Mandatory for Fedex and UPS. Specifies that the package contains Alcohol."""
    recipient_type: NotRequired[RecipientType]
    r"""Mandatory for Fedex only. License type of the recipient of the Alcohol Package."""
    

class Alcohol(BaseModel):
    r"""Indicates that a shipment contains Alcohol (Fedex and UPS only)."""
    
    contains_alcohol: Optional[bool] = None
    r"""Mandatory for Fedex and UPS. Specifies that the package contains Alcohol."""
    recipient_type: Optional[RecipientType] = None
    r"""Mandatory for Fedex only. License type of the recipient of the Alcohol Package."""
    
