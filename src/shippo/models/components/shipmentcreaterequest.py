"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from .addresscreaterequest import AddressCreateRequest, AddressCreateRequestTypedDict
from .customsdeclarationcreaterequest import CustomsDeclarationCreateRequest, CustomsDeclarationCreateRequestTypedDict
from .parcelcreatefromtemplaterequest import ParcelCreateFromTemplateRequest, ParcelCreateFromTemplateRequestTypedDict
from .parcelcreaterequest import ParcelCreateRequest, ParcelCreateRequestTypedDict
from .shipmentextra import ShipmentExtra, ShipmentExtraTypedDict
import pydantic
from shippo.types import BaseModel
from typing import List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class ShipmentCreateRequestTypedDict(TypedDict):
    address_from: AddressFromTypedDict
    address_to: AddressToTypedDict
    parcels: List[ParcelsTypedDict]
    extra: NotRequired[ShipmentExtraTypedDict]
    r"""An object holding optional extra services to be requested."""
    metadata: NotRequired[str]
    r"""A string of up to 100 characters that can be filled with any additional information you want to attach to the object."""
    shipment_date: NotRequired[str]
    r"""Date the shipment will be tendered to the carrier. Must be in the format `2014-01-18T00:35:03.463Z`.
    Defaults to current date and time if no value is provided. Please note that some carriers require this value to
    be in the future, on a working day, or similar.
    """
    address_return: NotRequired[AddressReturnTypedDict]
    customs_declaration: NotRequired[ShipmentCreateRequestCustomsDeclarationTypedDict]
    async_: NotRequired[bool]
    carrier_accounts: NotRequired[List[str]]
    r"""List of <a href=\"#tag/Carrier-Accounts/\">Carrier Accounts</a> `object_id`s used to filter
    the returned rates.  If set, only rates from these carriers will be returned.
    """
    

class ShipmentCreateRequest(BaseModel):
    address_from: AddressFrom
    address_to: AddressTo
    parcels: List[Parcels]
    extra: Optional[ShipmentExtra] = None
    r"""An object holding optional extra services to be requested."""
    metadata: Optional[str] = None
    r"""A string of up to 100 characters that can be filled with any additional information you want to attach to the object."""
    shipment_date: Optional[str] = None
    r"""Date the shipment will be tendered to the carrier. Must be in the format `2014-01-18T00:35:03.463Z`.
    Defaults to current date and time if no value is provided. Please note that some carriers require this value to
    be in the future, on a working day, or similar.
    """
    address_return: Optional[AddressReturn] = None
    customs_declaration: Optional[ShipmentCreateRequestCustomsDeclaration] = None
    async_: Annotated[Optional[bool], pydantic.Field(alias="async")] = None
    carrier_accounts: Optional[List[str]] = None
    r"""List of <a href=\"#tag/Carrier-Accounts/\">Carrier Accounts</a> `object_id`s used to filter
    the returned rates.  If set, only rates from these carriers will be returned.
    """
    

AddressFromTypedDict = Union[AddressCreateRequestTypedDict, str]


AddressFrom = Union[AddressCreateRequest, str]


AddressReturnTypedDict = Union[AddressCreateRequestTypedDict, str]


AddressReturn = Union[AddressCreateRequest, str]


AddressToTypedDict = Union[AddressCreateRequestTypedDict, str]


AddressTo = Union[AddressCreateRequest, str]


ShipmentCreateRequestCustomsDeclarationTypedDict = Union[CustomsDeclarationCreateRequestTypedDict, str]


ShipmentCreateRequestCustomsDeclaration = Union[CustomsDeclarationCreateRequest, str]


ParcelsTypedDict = Union[ParcelCreateFromTemplateRequestTypedDict, ParcelCreateRequestTypedDict, str]


Parcels = Union[ParcelCreateFromTemplateRequest, ParcelCreateRequest, str]

