"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .parcelextra import ParcelExtra, ParcelExtraTypedDict
from .parceltemplateenumset import ParcelTemplateEnumSet, ParcelTemplateEnumSetTypedDict
from .weightunitenum import WeightUnitEnum
from shippo.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class ParcelCreateFromTemplateRequestTypedDict(TypedDict):
    mass_unit: WeightUnitEnum
    r"""The unit used for weight."""
    weight: str
    r"""Weight of the parcel. Up to six digits in front and four digits after the decimal separator are accepted."""
    template: ParcelTemplateEnumSetTypedDict
    r"""If template is passed, `length`, `width`, `height`, and `distance_unit` are not required"""
    extra: NotRequired[ParcelExtraTypedDict]
    r"""An object holding optional extra services to be requested for each parcel in a multi-piece shipment.
    See the <a href=\"#section/Parcel-Extras\">Parcel Extra table below</a> for all available services.
    """
    metadata: NotRequired[str]


class ParcelCreateFromTemplateRequest(BaseModel):
    mass_unit: WeightUnitEnum
    r"""The unit used for weight."""

    weight: str
    r"""Weight of the parcel. Up to six digits in front and four digits after the decimal separator are accepted."""

    template: ParcelTemplateEnumSet
    r"""If template is passed, `length`, `width`, `height`, and `distance_unit` are not required"""

    extra: Optional[ParcelExtra] = None
    r"""An object holding optional extra services to be requested for each parcel in a multi-piece shipment.
    See the <a href=\"#section/Parcel-Extras\">Parcel Extra table below</a> for all available services.
    """

    metadata: Optional[str] = None
