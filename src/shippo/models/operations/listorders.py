"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from shippo.models.components import (
    ordershopappenum as components_ordershopappenum,
    orderstatusenum as components_orderstatusenum,
)
from shippo.types import BaseModel
from shippo.utils import FieldMetadata, HeaderMetadata, QueryParamMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListOrdersGlobalsTypedDict(TypedDict):
    shippo_api_version: NotRequired[str]
    r"""Optional string used to pick a non-default API version to use. See our <a href=\"https://docs.goshippo.com/docs/api_concepts/apiversioning/\">API version</a> guide."""


class ListOrdersGlobals(BaseModel):
    shippo_api_version: Annotated[
        Optional[str],
        pydantic.Field(alias="SHIPPO-API-VERSION"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""Optional string used to pick a non-default API version to use. See our <a href=\"https://docs.goshippo.com/docs/api_concepts/apiversioning/\">API version</a> guide."""


class ListOrdersRequestTypedDict(TypedDict):
    page: NotRequired[int]
    r"""The page number you want to select"""
    results: NotRequired[int]
    r"""The number of results to return per page (max 100)"""
    order_status: NotRequired[List[components_orderstatusenum.OrderStatusEnum]]
    r"""Filter orders by order status"""
    shop_app: NotRequired[components_ordershopappenum.OrderShopAppEnum]
    r"""Filter orders by shop app"""
    start_date: NotRequired[str]
    r"""Filter orders created after the input date and time (ISO 8601 UTC format).  This is based on the
    `placed_at` field, meaning when the order has been placed, not when the order object was created.
    """
    end_date: NotRequired[str]
    r"""Filter orders created before the input date and time (ISO 8601 UTC format).  This is based on the
    `placed_at` field, meaning when the order has been placed, not when the order object was created.
    """


class ListOrdersRequest(BaseModel):
    page: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 1
    r"""The page number you want to select"""

    results: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 25
    r"""The number of results to return per page (max 100)"""

    order_status: Annotated[
        Optional[List[components_orderstatusenum.OrderStatusEnum]],
        pydantic.Field(alias="order_status[]"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filter orders by order status"""

    shop_app: Annotated[
        Optional[components_ordershopappenum.OrderShopAppEnum],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filter orders by shop app"""

    start_date: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filter orders created after the input date and time (ISO 8601 UTC format).  This is based on the
    `placed_at` field, meaning when the order has been placed, not when the order object was created.
    """

    end_date: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filter orders created before the input date and time (ISO 8601 UTC format).  This is based on the
    `placed_at` field, meaning when the order has been placed, not when the order object was created.
    """
