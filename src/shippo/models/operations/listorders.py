"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import ordershopappenum as components_ordershopappenum
from ...models.components import orderstatusenum as components_orderstatusenum
from typing import List, Optional


@dataclasses.dataclass
class ListOrdersGlobals:
    shippo_api_version: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'SHIPPO-API-VERSION', 'style': 'simple', 'explode': False }})
    r"""Optional string used to pick a non-default API version to use. See our <a href=\\"https://docs.goshippo.com/docs/api_concepts/apiversioning/\\">API version</a> guide."""
    



@dataclasses.dataclass
class ListOrdersRequest:
    page: Optional[int] = dataclasses.field(default=1, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The page number you want to select"""
    results: Optional[int] = dataclasses.field(default=25, metadata={'query_param': { 'field_name': 'results', 'style': 'form', 'explode': True }})
    r"""The number of results to return per page (max 100)"""
    order_status: Optional[List[components_orderstatusenum.OrderStatusEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order_status[]', 'style': 'form', 'explode': True }})
    r"""Filter orders by order status"""
    shop_app: Optional[components_ordershopappenum.OrderShopAppEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'shop_app', 'style': 'form', 'explode': True }})
    r"""Filter orders by shop app"""
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""Filter orders created after the input date and time (ISO 8601 UTC format).  This is based on the
    `placed_at` field, meaning when the order has been placed, not when the order object was created.
    """
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""Filter orders created before the input date and time (ISO 8601 UTC format).  This is based on the
    `placed_at` field, meaning when the order has been placed, not when the order object was created.
    """
    

