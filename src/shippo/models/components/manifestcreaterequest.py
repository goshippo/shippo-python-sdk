"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from .addresscreaterequest import AddressCreateRequest, AddressCreateRequestTypedDict
import pydantic
from shippo.types import BaseModel
from typing import List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class ManifestCreateRequestTypedDict(TypedDict):
    carrier_account: str
    r"""ID of carrier account"""
    shipment_date: str
    r"""All shipments to be submitted on this day will be closed out.
    Must be in the format `2014-01-18T00:35:03.463Z` (ISO 8601 date).
    """
    address_from: ManifestCreateRequestAddressFromTypedDict
    transactions: NotRequired[List[str]]
    r"""IDs transactions to use. If you set this to null or not send this parameter,
    Shippo will automatically assign all applicable transactions.
    """
    async_: NotRequired[bool]
    

class ManifestCreateRequest(BaseModel):
    carrier_account: str
    r"""ID of carrier account"""
    shipment_date: str
    r"""All shipments to be submitted on this day will be closed out.
    Must be in the format `2014-01-18T00:35:03.463Z` (ISO 8601 date).
    """
    address_from: ManifestCreateRequestAddressFrom
    transactions: Optional[List[str]] = None
    r"""IDs transactions to use. If you set this to null or not send this parameter,
    Shippo will automatically assign all applicable transactions.
    """
    async_: Annotated[Optional[bool], pydantic.Field(alias="async")] = None
    

ManifestCreateRequestAddressFromTypedDict = Union[AddressCreateRequestTypedDict, str]


ManifestCreateRequestAddressFrom = Union[AddressCreateRequest, str]

