"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .corerate import CoreRate, CoreRateTypedDict
from .labelfiletypeenum import LabelFileTypeEnum
from .objectstateenum import ObjectStateEnum
from .responsemessage import ResponseMessage, ResponseMessageTypedDict
from .trackingstatusenum import TrackingStatusEnum
from .transactionstatusenum import TransactionStatusEnum
from datetime import datetime
from pydantic import model_serializer
from shippo.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


class CreatedByTypedDict(TypedDict):
    r"""An object with details about the user who created the Transaction (purchased the label).
    A value will be returned only for Transactions that can be associated with a specific user, e.g. when a logged-in
    user purchases a label via the Shippo Web application; but not for Transactions purchased e.g. via the API using a ShippoToken,
    which is associated with the account but not any specific user.
    """

    first_name: NotRequired[str]
    last_name: NotRequired[str]
    username: NotRequired[str]


class CreatedBy(BaseModel):
    r"""An object with details about the user who created the Transaction (purchased the label).
    A value will be returned only for Transactions that can be associated with a specific user, e.g. when a logged-in
    user purchases a label via the Shippo Web application; but not for Transactions purchased e.g. via the API using a ShippoToken,
    which is associated with the account but not any specific user.
    """

    first_name: Optional[str] = None

    last_name: Optional[str] = None

    username: Optional[str] = None


RateUnionTypedDict = TypeAliasType("RateUnionTypedDict", Union[CoreRateTypedDict, str])
r"""ID of the Rate object for which a Label has to be obtained.
If you purchase a label by calling the transaction endpoint without a rate (instalabel),
this field will be a simplified Rate object in the Transaction model returned from the POST request.
</br>Note, only rates less than 7 days old can be purchased to ensure up-to-date pricing.
"""


RateUnion = TypeAliasType("RateUnion", Union[CoreRate, str])
r"""ID of the Rate object for which a Label has to be obtained.
If you purchase a label by calling the transaction endpoint without a rate (instalabel),
this field will be a simplified Rate object in the Transaction model returned from the POST request.
</br>Note, only rates less than 7 days old can be purchased to ensure up-to-date pricing.
"""


class TransactionTypedDict(TypedDict):
    commercial_invoice_url: NotRequired[str]
    r"""A URL pointing to the commercial invoice as a 8.5x11 inch PDF file.
    A value will only be returned if the Transactions has been processed successfully and if the shipment is international.
    """
    created_by: NotRequired[Nullable[CreatedByTypedDict]]
    eta: NotRequired[str]
    r"""The estimated time of arrival according to the carrier."""
    label_file_type: NotRequired[LabelFileTypeEnum]
    r"""Print format of the <a href=\"https://docs.goshippo.com/docs/shipments/shippinglabelsizes/\">label</a>. If empty, will use the default format set from
    <a href=\"https://apps.goshippo.com/settings/labels\">the Shippo dashboard.</a>
    """
    label_url: NotRequired[str]
    r"""A URL pointing directly to the label in the format you've set in your settings.
    A value will only be returned if the Transactions has been processed successfully.
    """
    messages: NotRequired[List[ResponseMessageTypedDict]]
    metadata: NotRequired[str]
    r"""A string of up to 100 characters that can be filled with any additional information you want to
    attach to the object.
    """
    object_created: NotRequired[datetime]
    r"""Date and time of Transaction creation."""
    object_id: NotRequired[str]
    r"""Unique identifier of the given Transaction object."""
    object_owner: NotRequired[str]
    r"""Username of the user who created the Transaction object."""
    object_state: NotRequired[ObjectStateEnum]
    r"""Indicates the validity of the enclosing object"""
    object_updated: NotRequired[datetime]
    r"""Date and time of last Transaction update."""
    parcel: NotRequired[str]
    r"""Object ID of the Parcel object that is being shipped."""
    qr_code_url: NotRequired[str]
    r"""A URL pointing directly to the QR code in PNG format.
    A value will only be returned if requested using qr_code_requested flag and the carrier provides such an option.
    """
    rate: NotRequired[RateUnionTypedDict]
    r"""ID of the Rate object for which a Label has to be obtained.
    If you purchase a label by calling the transaction endpoint without a rate (instalabel),
    this field will be a simplified Rate object in the Transaction model returned from the POST request.
    </br>Note, only rates less than 7 days old can be purchased to ensure up-to-date pricing.
    """
    status: NotRequired[TransactionStatusEnum]
    r"""Indicates the status of the Transaction."""
    test: NotRequired[bool]
    r"""Indicates whether the object has been created in test mode."""
    tracking_number: NotRequired[str]
    r"""The carrier-specific tracking number that can be used to track the Shipment.
    A value will only be returned if the Rate is for a trackable Shipment and if the Transactions has been processed successfully.
    """
    tracking_status: NotRequired[TrackingStatusEnum]
    r"""Indicates the high level status of the shipment."""
    tracking_url_provider: NotRequired[str]
    r"""A link to track this item on the carrier-provided tracking website.
    A value will only be returned if tracking is available and the carrier provides such a service.
    """


class Transaction(BaseModel):
    commercial_invoice_url: Optional[str] = None
    r"""A URL pointing to the commercial invoice as a 8.5x11 inch PDF file.
    A value will only be returned if the Transactions has been processed successfully and if the shipment is international.
    """

    created_by: OptionalNullable[CreatedBy] = UNSET

    eta: Optional[str] = None
    r"""The estimated time of arrival according to the carrier."""

    label_file_type: Optional[LabelFileTypeEnum] = None
    r"""Print format of the <a href=\"https://docs.goshippo.com/docs/shipments/shippinglabelsizes/\">label</a>. If empty, will use the default format set from
    <a href=\"https://apps.goshippo.com/settings/labels\">the Shippo dashboard.</a>
    """

    label_url: Optional[str] = None
    r"""A URL pointing directly to the label in the format you've set in your settings.
    A value will only be returned if the Transactions has been processed successfully.
    """

    messages: Optional[List[ResponseMessage]] = None

    metadata: Optional[str] = None
    r"""A string of up to 100 characters that can be filled with any additional information you want to
    attach to the object.
    """

    object_created: Optional[datetime] = None
    r"""Date and time of Transaction creation."""

    object_id: Optional[str] = None
    r"""Unique identifier of the given Transaction object."""

    object_owner: Optional[str] = None
    r"""Username of the user who created the Transaction object."""

    object_state: Optional[ObjectStateEnum] = None
    r"""Indicates the validity of the enclosing object"""

    object_updated: Optional[datetime] = None
    r"""Date and time of last Transaction update."""

    parcel: Optional[str] = None
    r"""Object ID of the Parcel object that is being shipped."""

    qr_code_url: Optional[str] = None
    r"""A URL pointing directly to the QR code in PNG format.
    A value will only be returned if requested using qr_code_requested flag and the carrier provides such an option.
    """

    rate: Optional[RateUnion] = None
    r"""ID of the Rate object for which a Label has to be obtained.
    If you purchase a label by calling the transaction endpoint without a rate (instalabel),
    this field will be a simplified Rate object in the Transaction model returned from the POST request.
    </br>Note, only rates less than 7 days old can be purchased to ensure up-to-date pricing.
    """

    status: Optional[TransactionStatusEnum] = None
    r"""Indicates the status of the Transaction."""

    test: Optional[bool] = None
    r"""Indicates whether the object has been created in test mode."""

    tracking_number: Optional[str] = None
    r"""The carrier-specific tracking number that can be used to track the Shipment.
    A value will only be returned if the Rate is for a trackable Shipment and if the Transactions has been processed successfully.
    """

    tracking_status: Optional[TrackingStatusEnum] = None
    r"""Indicates the high level status of the shipment."""

    tracking_url_provider: Optional[str] = None
    r"""A link to track this item on the carrier-provided tracking website.
    A value will only be returned if tracking is available and the carrier provides such a service.
    """

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "commercial_invoice_url",
            "created_by",
            "eta",
            "label_file_type",
            "label_url",
            "messages",
            "metadata",
            "object_created",
            "object_id",
            "object_owner",
            "object_state",
            "object_updated",
            "parcel",
            "qr_code_url",
            "rate",
            "status",
            "test",
            "tracking_number",
            "tracking_status",
            "tracking_url_provider",
        ]
        nullable_fields = ["created_by"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
